find.package("devtools")
install.packages("devtools")
library(devtools)
library(devtools)
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
librar(swirl)
library(swirl)
swirl()
fir(i in 1:4)print(i)
for(i in 1:4)print(i)
x <- c("a", "b", "c", "d")
for(q in x){}
for(q in x){ q}
for(q in x){ print(q)}
setwd("C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2")
m <- matrix()
m
m[1,1] = 5
m
makeCacheMatrix(m)
source('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
source('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
mv <- makeCacheMatrix(m)
mv
cacheSolve(mv)
inverse(m)
source('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
source('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
solve(m)
cacheSolve(mv)
source('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
mv
cacheSolve(mv)
b<- matrix(4,4)
b
b[1,4] = 6
b[1,4] <- 5
b[4,1] <- 5
b
bv <- c(m, b)
bv
bv <- c(matrix = m, inverse = b)
bv
cacheSolve bv
cacheSolve(bv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
m
mv <- macheCacheMatrix(m)
mv <- makeCacheMatrix(m)
mv
cacheSolve(mv)
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
View(m)
View(b)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
m <- matrix(2,2)
m
m[1,1] <- 3
m
m <- matrix(nrow=2, ncol=2)
m
m[1,1] = 1
m[1,2] = 2
m[2,1] = 5
m[2,2] = 6
m
solve(m)
mv = makeCacheMatrix(m)
mv
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
if(is.null(x["inverse"])){
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
cacheSolve(mv)
## Return a matrix that is the inverse of 'x'
mv <- makeCacheMatrix(m)
m
mv
cacheSolve(mv)
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/dev/Training/DataScienceTrack/RProgramming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mv)
cacheSolve(mv)
